<?xml version="1.0" encoding="UTF-8"?>
<project default="all" basedir="../../" name="schema">
    <description>Creation of schemas for Beta maṣāḥǝft: Manuscripts of Ethiopia and
        Eritrea</description>
    <!-- Directories-->
    <property name="outputDir" value="."/>
    <property name="transformDir" value=".github/opt/transform"/>
    <property name="bin" value="${transformDir}/bin"/>

    <!-- Files -->
    <property name="sourceOdd" value="tei-betamesaheft.xml"/>
    <basename file="${sourceOdd}" property="plainFileName" suffix=".xml"/>
    <property name="localSource" value="${transformDir}/source/p5subset.xml"/>

    <!-- Libraries and tasks -->
    <property name="saxonJar" value="${transformDir}/lib/saxon10he.jar"/>
    <property name="schxsltJar" value="${transformDir}/lib/schxslt-cli.jar"/>
    <property name="jingJar" value="${transformDir}/lib/jing.jar"/>
    <taskdef name="jing" classname="com.thaiopensource.relaxng.util.JingTask" classpath="${jingJar}"/>
    <target name="validate">
        <description>Validate source ODD against tei_odds schema</description>
        <get src="http://www.tei-c.org/release/xml/tei/custom/schema/relaxng/tei_odds.rng" dest="."/>
        <jing rngfile="tei_odds.rng" file="${sourceOdd}"/>
        <echo message="ODD is valid against RELAXNG schema"/>
        <java fork="true" classname="net.sf.saxon.Transform" classpath="${saxonJar}"
            failonerror="true">
            <arg value="-s:tei_odds.rng"/>
            <arg value="-xsl:${transformDir}/external/RNG2Schtrn.xsl"/>
            <arg value="-o:./tei_odds.sch"/>
            <arg value="--suppressXsltNamespaceCheck:on"/>
            <arg value="-versionmsg:off"/>
        </java>
        <java fork="true" classname="name.dmaus.schxslt.cli.Application" classpath="${schxsltJar}"
            outputproperty="validity">
            <arg value="-d=${sourceOdd}"/>
            <arg value="-s=tei_odds.sch"/>
            <arg value="-o=./report.xml"/>
        </java>
        <fail
            message="ODD is invalid. See report.xml for more information (tip: look for element svrl:text)">
            <condition>
                <contains string="${validity}" substring="[invalid]"/>
            </condition>
        </fail>
        <echo message="ODD is valid against the Schematron constraints"/>
    </target>
    <target name="compile" depends="validate">
        <description>Create compiled ODD from source schemas so it can be chained</description>
        <java fork="true" classname="net.sf.saxon.Transform" classpath="${saxonJar}"
            failonerror="true">
            <arg value="-s:${sourceOdd}"/>
            <arg value="-xsl:${transformDir}/odds/odd2odd.xsl"/>
            <arg value="-o:./${plainFileName}_compiled.xml"/>
            <arg value="--suppressXsltNamespaceCheck:on"/>
            <arg value="-versionmsg:off"/>
        </java>
        <echo message="create compiled version of ${plainFileName}"/>
    </target>
    <target name="schema" depends="compile">
        <description>Create RELAXNG schemas from source ODD and expanded ODD</description>
        <exec executable="${bin}/teitorelaxng" failonerror="true">
            <arg line="--localsource=${localSource}"/>
            <arg file="${sourceOdd}"/>
            <arg file="${outputDir}/${plainFileName}.rng"/>
        </exec>
        <exec executable="${bin}/teitorelaxng" failonerror="true">
            <arg line="--localsource=${localSource}"/>
            <arg file="${plainFileName}-expanded.xml"/>
            <arg file="${outputDir}/${plainFileName}-expanded.rng"/>
        </exec>
    </target>
    <target name="clean">
        <description>Delete files added to the main repository</description>
        <delete file="${plainFileName}_compiled.xml"/>
        <delete file="tei_odds.rng"/>
        <delete file="tei_odds.sch"/>
        <delete file="report.xml"/>
    </target>
    <target name="all" depends="schema">
        <antcall target="clean"/>
    </target>
</project>
